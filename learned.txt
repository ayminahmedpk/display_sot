

- It seems, when you use useSelector and seek for a particular value, the React
  Redux AI looks for the most reasonable match for that query. It's like a mini
  search function. So make sure your namings are clear and separate, or to use
  the full path like
    const target = useSelector( state => state.ambiguous.specific.target ) ;


- Redux and useState ARE supposed to be used together. Redux is only used for
  sharing state that absolutely MUST be shared across components. useState is
  for sharing for all other state; state that is local to the component.


- The "homepage" attribute in package.json was edited. "." for testing in a
  local developmental enviroment, and the actual web address for deployment
  purposes.

- A nice directory structure is:

    src/
        App/
        Components/
            Component1/
            Component2/
            Component3/
            Component2-Subcomponent1/
        Pages/
            Page1/
            Page2/
        Redux/
        HelperFunctions/
        index.js

  * It is better to have all the components and subcomponents at the same level
    of depth in terms of directories. This makes it easier to reuse components
    within the program and transferring them externally.
    
    Also makes it easier and more uniform to manage code in the long run, as you
    don't have to search for a specific component in a specific directory. You
    know they are all in one place.